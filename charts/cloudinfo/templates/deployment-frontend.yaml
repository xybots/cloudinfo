apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cloudinfo.frontend.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "cloudinfo.name" . }}
    app.kubernetes.io/component: "frontend"
    helm.sh/chart: {{ include "cloudinfo.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    {{- with .Values.frontend.deployment.labels }}
    {{ toYaml . | nindent 4 }}
    {{- end }}
  {{- with .Values.frontend.deployment.annotations }}
  annotations:
    {{ toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.frontend.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "cloudinfo.name" . }}
      app.kubernetes.io/component: "frontend"
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "cloudinfo.name" . }}
        app.kubernetes.io/component: "frontend"
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
    spec:
      {{- if .Values.serviceAccountName }}
      serviceAccountName: {{ .Values.serviceAccountName }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}-frontend
          image: "{{ default .Values.image.repository .Values.frontend.image.repository }}:{{ default .Values.image.tag .Values.frontend.image.tag }}"
          imagePullPolicy: {{ default .Values.image.pullPolicy .Values.frontend.image.pullPolicy }}
          args: ["cloudinfo", "--scrape=false", "--config=/etc/cloudinfo/config.yaml", "--listen-address=0.0.0.0:8000", "--metrics-address=0.0.0.0:{{ .Values.metrics.port }}"]
          volumeMounts:
            - name: config
              mountPath: /etc/cloudinfo/config.yaml
              subPath: config.yaml
              readOnly: true
          env:
            - name: VAULT_SKIP_VERIFY
              value: "true"
          envFrom:
            - secretRef:
                name: {{ template "cloudinfo.fullname" . }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
            {{- if .Values.metrics.enabled }}
            - name: metrics
              containerPort: {{ .Values.metrics.port }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: {{ .Values.app.basePath }}/status
              port: http
          readinessProbe:
            httpGet:
              path: {{ .Values.app.basePath }}/status
              port: http
          resources:
            {{ toYaml .Values.frontend.resources | nindent 12 }}
      volumes:
        - name: config
          secret:
            secretName: "{{ template "cloudinfo.fullname" . }}"
      {{- with .Values.frontend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.frontend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.frontend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
